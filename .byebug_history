c
@stories.each { |story| story }
@stories
c
params[:favorite]
params
params['author_id']
params['author_id]
Favorite.find_by(author_id: params['author_id'], story_id: params['story_id'])
params[:author_id]
Favorite.find_by(author_id: params[:author_id])
params
c
auth_hash['info']
auth_hash
author
author.avatar.url(:small)
author.avatar.url
author
c
cc
c
Author.find_by(email: "jolim24601@gmail.com")
Author.find_by(name: "John Lim")
Author.all
author.save!
author
n
s
n
s
auth_hash['info']['image']
author.avatar
c
author.avatar.url
author.avatar = avatar_url
avatar_url
avatar_url = auth_hash['info']['image'].gsub!("http", "https")
avatar_url = ("­http","htt­ps")uth_hash['info']['image'].gsub!("http", "https")
auth_hash['info']['image']
auth_hash['info']['image'].gsub("http", "https")
auth_hash['info']['image']
c
auth_hash['info']['image']
c
auth_hash['info']['image']
c
@author
c
@tags
@top_tags
c
@stories
c
tag
c
 Tag.page(1).per(15)
 Tag.page(1)
c
tag
c
show_full
c
Story.page(1).order(created_at: :desc)
Story.page(1)
params
c
@taggable.taggings.where(tag_id: tag.id).destroy_all
@taggable.taggings.where(tag_id: tag.id).delete
@taggable.taggings.where(tag_id: tag.id)
@taggable.taggings.where(tag_id: tag.id).destroy
@taggable.taggings.where(tag_id: tag.id)
@taggable.taggings.destroy.where(tag_id: tag.id)
tag.id
@taggable.taggings.destroy(tag_id: tag.id)
@taggable.taggings
c
tags
c
@taggable.taggings
tags
Tag.find_by_name("hello")
Tag.find_by_name("Hello")
Tag.find_by_name("hello kity")
Tag.find_by_name("Hello kity")
Tag.all
tag
tag = Tag.find_by(name: "Hello")
Tag.find_by(name: "Hello")
tag
tag = Tag.find_or_create_by(name: "Hello")
tag = Tag.find_or_create_by(name: "Hello Kitty")
Tag.find_or_create_by(name: "Hello")
Tag.find_or_create_by(name:"Hello")
Tag.find_or_create_by("Hello")
Tag.find_or_create_by_name("Hello")
Tag.find_or_create_by_name!("Hello")
Tag.find_or_create_by!(name: "Hello")
Tag.all.count
Tag.find_or_create_by(name: "Hello")
@taggable.taggings.count
@taggable.taggings
tags
n
self.tags
taggings
n
@taggable.tags
tags
c
tags
@taggable.taggings
c
@taggable.taggings
tags
c
@taggable.taggings
@taggabletaggings
tags
c
@taggable.taggings
@taggable.tags
@taggable.tags.destroy
@taggable.tags
@taggable
tags
c
tags
c
tags
c
tags
c
tags
c
tags
c
tags
c
params
tags
c
tags
c
tags
c
params
c
api_tag_url(tag)
url_for(tag)
asset_url(tag)
tag_path
url_for(tag)
tag.url
tag
c
@story.valid?
@story
c
@story.errors
@story.valid?
c
@story
c
@story
c
@story
c
@story
c
@story
c
@story.errors
@story.valid?
story_params
@story
c
show_full
author.stories
author
c
@show_full
c
PgSearch.multisearch("Ray").includes(:searchable)
PgSearch.multisearch("tit").includes(:searchable)
params
c
json
json.results
self
c
json.partial! "api/stories/story", story: result, show_full: false
result
story
json.partial! "api/stories/story", story: result, show_full: false
result.class
result.searchable
result
c
story
result
c
finish
f
c
result.class == Story
result.class
c
result.class
result
c
Story.search(params[:query]).page(params[:page])
params
c
params
c
params
c
params
c
params
c
params
c
n
params
c
Story.search_stories("tit")
Story.search_stories("title")
Story.search_stories
PgSearch.search_stories
PgSearch.multisearch("title").includes(:searchable)
PgSearch.multisearch("title")
PgSearch.multisearch(params[:query])
PgSearch.methods
PgSearch.multisearchable
params
exit
Author.all
Author.find('5')
Author('5')
Author.find(5)
author
c
author.is_password?("jupiter")
author.password
BCrypt::Password.new(author.password_digest).is_password?("jupiter3")
author.password_digest
self.password_digest
password_digest
author.is_password?("jupiter3")
password
author
c
Author.find_by_credentials(params[:author][:email], params[:author][:password])
params[:author][:email]
