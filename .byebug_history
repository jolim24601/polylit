c
show_full
author.stories
author
c
@show_full
c
PgSearch.multisearch("Ray").includes(:searchable)
PgSearch.multisearch("tit").includes(:searchable)
params
c
json
json.results
self
c
json.partial! "api/stories/story", story: result, show_full: false
result
story
json.partial! "api/stories/story", story: result, show_full: false
result.class
result.searchable
result
c
story
result
c
finish
f
c
result.class == Story
result.class
c
result.class
result
c
Story.search(params[:query]).page(params[:page])
params
c
params
c
params
c
params
c
params
c
params
c
n
params
c
Story.search_stories("tit")
Story.search_stories("title")
Story.search_stories
PgSearch.search_stories
PgSearch.multisearch("title").includes(:searchable)
PgSearch.multisearch("title")
PgSearch.multisearch(params[:query])
PgSearch.methods
PgSearch.multisearchable
params
exit
Author.all
Author.find('5')
Author('5')
Author.find(5)
author
c
author.is_password?("jupiter")
author.password
BCrypt::Password.new(author.password_digest).is_password?("jupiter3")
author.password_digest
self.password_digest
password_digest
author.is_password?("jupiter3")
password
author
c
Author.find_by_credentials(params[:author][:email], params[:author][:password])
params[:author][:email]
params[:author][:email}
params[:author]
params
author
c
author_params
c
params
c
params
quit
autquit
author.stories
api_author_url(author)
api_author_url
author_url
author_path
url_for(author)
author.pen_name
author.id
author
c
@story.errors
@story.valid?
c
time_ago_in_words(story.created_at)
story.created_at
c
json.created_at time_ago_in_words(story.created_at)
json.created_at story.created_at
json.extract! story, :created_at
json.extract! :created_at
json.story
time_ago_in_words(story.created_at)
story.created_at
story
json
c
json.partial! @stories.first.title
@stories.first
@stories
c
@story
continue
@story
c
@story.valid?
@story
c
current_author
User
@current_user
current_user
c
n
s
session[:session_token]
session
n
s
session_token
n
s
self
n
s
self
s
current_author
c
author
c
session[:session_token]
session
session[:session_token]
logged_in?
c
author
locals
action_url
locals
c
variables
locals
action_url
c
action_url
api_action_url
action_url
c
api_authors_url
action_url
c
session[:session_token]
logged_in?
<% logged_in? %>
c
params
author
c
params
param
author_params
author
c
author
